<?xml version="1.0" ?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" 
	name="Remotr Server" default="tidy-war" basedir=".">
    
	<!-- PROPERTIES -->
	<property name="source.dir" location="${basedir}/src" />
	<property name="build.dir" location="${basedir}/build" />
	<property name="webcontent.dir" location="${basedir}/WebContent" />
	<property name="bin.dir" location="${build.dir}/bin" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="dist.dir" location="${basedir}/dist" />
	<property name="doc.dir" location="${basedir}/doc" />
	<property name="reports.dir" location="${basedir}/reports" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="deploy.dir" value="/usr/local/jboss/standalone/deployments" />
	
	<property name="debug" value="true" />

	<!-- RemotrUtil proerties -->
	<condition property="ru.local.dir" else="RemotrUtil">
		<isset property="ru.local.dir"/>
	</condition>
	<property name="ru.dir" location="../${ru.local.dir}" />
	<property name="ru.bin.dir" location="${ru.dir}/build/bin/" />
	<property name="ru.build.dir" location="${ru.dir}/build/" />
	<property name="ru.src.dir" location="${ru.dir}/src/" />
	<property name="ru.jar.dir" location="${ru.dir}/dist/" />
	
	<!-- libs -->
	<property name="log.lib.dir" location="${lib.dir}/log4j/bundle" />

	<!-- Version properties -->
	<property file="${source.dir}/version.properties" />
	<property name="warFileName" value="remotr.war" />

	<path id="compile-classpath">
		<fileset dir="${lib.dir}">
		    <include name="**/jar/*.jar"/>
			<exclude name="junit/jar/*.jar"/>
		</fileset>
		<fileset dir="${log.lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test-classpath"> 
		<fileset dir="${lib.dir}">
		    <include name="junit/jar/*.jar"/>
		</fileset>
  		<pathelement location="${bin.dir}\test" />
  		<pathelement location="${bin.dir}" />
  		<path refid="compile-classpath" />	 
	</path>

	<!-- TARGETS -->
	<!-- IVY -->
	<target name="resolve" description="retrieve dependencies with ivy">
		<ivy:retrieve pattern="${lib.dir}/[organisation]/[type]/[artifact]-[revision].[ext]"/>
	</target>
	
	<target name="remove-after-fail" if="test.failed">
	    <echo message="Removing build dir after test fail" />
	    <delete dir="${build.dir}" />
	    <fail message="Test failure detected, check test results." if="test.failed" />
	</target>
	
	<target name="remove-docs">
		<delete dir="${doc.dir}" />
	</target>

	<target name="remove-builds">
		<echo message="Removing all dirs" />
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="remove-bin" depends="remove-builds">
		<echo message="Removing bin dir" />
		<delete dir="${baseDir}/bin" />
		<delete dir="${bin.dir}" />
	</target>

	<target name="init">
		<echo message="Creating new dirs" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${bin.dir}/test" />
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${lib.dir}" />
		<echo message="Completed init." />
	</target>

	<target name="build">
		<echo message="Copying files to build directory" />
		<copy todir="${build.dir}/" verbose="${debug}" preservelastmodified="true">
			<fileset dir="${basedir}">
				<exclude name="${build.dir}/" />
				<exclude name="${dist.dir}/" />
				<exclude name="build.xml" />
				<exclude name=".project" />
				<exclude name="**/.settings" />
				<exclude name="**/.git" />
			</fileset>
		</copy>
		<echo message="File copy complete" />
	</target>

	<target name="compile" depends="remove-bin, init, resolve, build">
		<echo message="Building source" />
		<echo message="Using base dir ${basedir}" />
		<echo message="Using RemotrUtil dir ${ru.dir}" />
		<javac srcdir="${source.dir};${ru.src.dir}" destdir="${bin.dir}" debug="true"
			debuglevel="lines,vars,source" source="1.6" target="1.6" encoding="UTF-8"
			includeantruntime="true">
			<classpath refid="compile-classpath" />
		</javac>
	</target>

	<target name="compile-tests" depends="remove-bin, init, resolve, build, compile">
	    <echo message="Building tests" />
		<javac srcdir="${test.dir}" destdir="${lib.dir}/test"
			includeantruntime="true" debuglevel="lines,vars,source" source="1.6"
			target="1.6" encoding="UTF-8" >
			<classpath>
			    <path refid="test-classpath" />
			</classpath>
		</javac>
	</target>
	
	<target name="war" depends="compile">
		<echo message="Building war for Remotr ${version.name} - Version ${version.number}" />
		<war destfile="${dist.dir}/${warFileName}" webxml="${build.dir}/WebContent/WEB-INF/web.xml">
			<manifest>
				<attribute name="Implementation-Version" value="${version.number}" />
				<attribute name="Implementation-Title" value="${version.name}" />
			</manifest>
			<lib dir="${lib.dir}">
				<include name="**/jar/*.jar"/>
				<include name="${log.lib.dir}/*jar"/>
			</lib>
			<zipfileset dir="${build.dir}/src" includes="hibernate.cfg.xml" prefix="WEB-INF/classes" />
			<zipfileset dir="${build.dir}/src" includes="hibernate.properties" prefix="WEB-INF/classes" />
			<classes dir="${bin.dir}" />
		</war>
		<echo message="WAR file created." />
		<echo message="Copying config to dist" />
		<copy file="${webcontent.dir}/WEB-INF/spring.xml" todir="${dist.dir}" overwrite="true" />
	</target>

	<target name="doc" depends="remove-docs">
		<delete dir="${doc.dir}" />
		<mkdir dir="${doc.dir}" />
		<javadoc sourcepath="${source.dir}" destdir="${doc.dir}" />
	</target>

	<target name="clean-all" depends="init" />

	<target name="tidy-war" depends="war">
		<echo message="Tidying up..." />
		<delete dir="${build.dir}" />
		<delete dir="{$build.dir}/classes" />
	</target>

	<target name="test-war" depends="compile-tests, tidy-war">
		<junit haltonfailure="no" failureproperty="test.failed" printsummary="true">
			<classpath>
			    <path refid="test-classpath" />
			 </classpath>
			<formatter type="brief" usefile="false" />
			<formatter type="xml"/>
			<batchtest todir="${reports.dir}">
				<fileset dir="${lib.dir}/test">
					<include name="**/*Test*" />
				</fileset>
			</batchtest>
		</junit>
		<antcall target="remove-after-fail" />
	</target>
	
	<target name="test-war-report" depends="test-war">
	    <mkdir dir="${reports.dir}/html"/>
	    <junitreport todir="${reports.dir}">
	        <fileset dir="${reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${reports.dir}/html"/>
        </junitreport>
	</target>

</project>